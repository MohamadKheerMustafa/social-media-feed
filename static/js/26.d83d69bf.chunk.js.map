{"version":3,"file":"static/js/26.d83d69bf.chunk.js","mappings":"8OAWA,MAAMA,EAAaC,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEvCK,EAAAA,EAAAA,YAAU,KACR,GAAIR,EAAQ,CACeS,WACvB,IACEF,GAAW,GACX,MAAOG,EAAcC,SAA0BC,QAAQC,IAAI,CACzDC,MAAM,8CAA8Cd,KACpDc,MACE,8CAA8Cd,gBAG5Ce,QAAiBL,EAAaM,OAC9BC,QAAqBN,EAAiBK,OAC5Cd,EAAQa,GACRV,EAAYY,EACd,CAAE,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,CAAC,QACCX,GAAW,EACb,GAGFa,EACF,IACC,CAACpB,IAEJ,MAAMqB,GAAmBC,EAAAA,EAAAA,UAAQ,IAAMlB,GAAU,CAACA,IAElD,OAAIE,GAEAiB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,OAAO,QAAOC,UAEdN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,MAKlB7B,GAKHsB,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,QAAS,EAAEL,SACpC5B,GACCkC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACEM,EAAAA,EAAAA,MAACJ,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGT,SAAA,EAChBN,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,oBACzBN,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAAAZ,UACHM,EAAAA,EAAAA,MAACO,EAAAA,EAAW,CAAAb,SAAA,EACVN,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,KAAKG,UAAU,MAAKd,SACrC5B,EAAK2C,SAERrB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,QAAQK,MAAM,iBAAgBhB,SAC/C5B,EAAK6C,gBAKdX,EAAAA,EAAAA,MAACJ,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGT,SAAA,EAChBN,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,aACxBR,EAAiB0B,KAAKC,IACrBzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAERC,MAAM,UACNC,WAAS,EACTC,WAAS,EACTZ,QAAQ,WACRa,OAAO,SACPC,MAAON,EAAQF,KACfS,WAAY,CACVC,UAAU,IARPR,EAAQS,aAerBlC,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAC,uBAvCtBN,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAAAV,SAAC,iCAyCZ,EAIX,EAAe6B,EAAAA,KAAW5D,E","sources":["components/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  CircularProgress,\n  Box,\n} from \"@mui/material\";\n\nconst PostDetail = ({ postId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (postId) {\n      const fetchPostDetails = async () => {\n        try {\n          setLoading(true);\n          const [postResponse, commentsResponse] = await Promise.all([\n            fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`),\n            fetch(\n              `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n            ),\n          ]);\n          const postData = await postResponse.json();\n          const commentsData = await commentsResponse.json();\n          setPost(postData);\n          setComments(commentsData);\n        } catch (error) {\n          console.error(\"Error fetching post details:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchPostDetails();\n    }\n  }, [postId]);\n\n  const memoizedComments = useMemo(() => comments, [comments]);\n\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (!post) {\n    return <Typography>Select a post to view details</Typography>;\n  }\n\n  return (\n    <Grid container spacing={2} padding={2}>\n      {post ? (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\"> Post Details </Typography>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                  {post.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {post.body}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\">Comments</Typography>\n            {memoizedComments.map((comment) => (\n              <TextField\n                key={comment.id}\n                label=\"Comment\"\n                fullWidth\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={comment.body}\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n            ))}\n          </Grid>\n        </>\n      ) : (\n        <Typography variant=\"h6\">Loading post...</Typography>\n      )}\n    </Grid>\n  );\n};\n\nexport default React.memo(PostDetail);\n"],"names":["PostDetail","_ref","postId","post","setPost","useState","comments","setComments","loading","setLoading","useEffect","async","postResponse","commentsResponse","Promise","all","fetch","postData","json","commentsData","error","console","fetchPostDetails","memoizedComments","useMemo","_jsx","Box","display","justifyContent","alignItems","height","children","CircularProgress","Grid","container","spacing","padding","_jsxs","_Fragment","item","xs","Typography","variant","Card","CardContent","component","title","color","body","map","comment","TextField","label","fullWidth","multiline","margin","value","InputProps","readOnly","id","React"],"sourceRoot":""}